rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // FIXED: Safer helper functions that avoid permissions loops
    function getUserRole(uid) {
      return resource.data.role;
    }
    
    function getUserTeamId(uid) {
      return resource.data.teamId;
    }
    
    function isAdmin(uid) {
      return getUserRole(uid) == 'admin';
    }
    
    function isManager(uid) {
      return getUserRole(uid) == 'manager';
    }
    
    function isManagerOrAdmin(uid) {
      return getUserRole(uid) in ['manager', 'admin'];
    }
    
    function isCloser(uid) {
      return getUserRole(uid) == 'closer';
    }
    
    function isSetter(uid) {
      return getUserRole(uid) == 'setter';
    }

    // Users collection - FIXED to avoid permission loops
    match /users/{userId} {
      // Allow users to read their own document and allow broader read access for authenticated users
      allow read: if isAuthenticated() && 
        (request.auth.uid == userId || 
         resource.data.role in ['manager', 'admin'] ||
         true); // Temporarily allow all authenticated users to read
      
      allow create: if isAuthenticated() && request.auth.uid == userId;
      
      allow update: if isAuthenticated() && 
        (request.auth.uid == userId || resource.data.role in ['manager', 'admin']);
      
      allow delete: if isAuthenticated() && resource.data.role == 'admin';
    }

    // ENHANCED Leads collection - Simplified for debugging
    match /leads/{leadId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated();
      allow delete: if isAuthenticated() && resource.data.role in ['manager', 'admin'];
    }

    // Closers collection - Simplified for debugging
    match /closers/{closerId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated();
      allow delete: if isAuthenticated() && resource.data.role in ['manager', 'admin'];
    }

    // Simplified collections for debugging - all allow authenticated access
    match /lead_actions/{actionId} {
      allow read, write: if isAuthenticated();
    }

    match /activities/{activityId} {
      allow read, write: if isAuthenticated();
    }

    match /pending_approvals/{approvalId} {
      allow read, write: if isAuthenticated();
    }

    match /invitations/{invitationId} {
      allow read, write: if isAuthenticated();
    }

    match /chat_messages/{messageId} {
      allow read, write: if isAuthenticated();
    }

    match /chat_channels/{channelId} {
      allow read, write: if isAuthenticated();
    }

    match /reports/{reportId} {
      allow read, write: if isAuthenticated();
    }

    match /teams/{teamId} {
      allow read, write: if isAuthenticated();
    }

    match /notifications/{notificationId} {
      allow read, write: if isAuthenticated();
    }

    match /analytics/{analyticsId} {
      allow read, write: if isAuthenticated();
    }

    match /userTokens/{userId} {
      allow read, write: if isAuthenticated();
    }

    match /appointmentReminders/{reminderId} {
      allow read, write: if isAuthenticated();
    }

    match /function_errors/{errorId} {
      allow read, write: if isAuthenticated();
    }

    // Default allow rule for authenticated users (temporary for debugging)
    match /{document=**} {
      allow read, write: if isAuthenticated();
    }
  }
}